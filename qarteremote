#! /usr/bin/python
# -*- coding: utf-8 -*-
#
#----------------------------------------------
# API definition for Arte+7
#----------------------------------------------
#
# VIDEOS :
#
# Request Arte+7 videos list : /arteplus/videos
# Request Arte+7 video info  : /arteplus/video/info/<video_id>
# add a Arte+7 video in the download list : /arteplus/video/add/<video_id>
# remove a Arte+7 video from the download list: /arteplus/video/delete/<video_id>
# configure a Arte+7 video in the download list /arteplus/video/configure/<video_id>
#
# DOWNLOAD :
#
# start downloading : /download/start
# cancel downloading : /download/cancel
#
# TOOL CONFIGURATION :
#

from flask import Flask, make_response
from flask import send_from_directory
from flask import jsonify
from flask import render_template
from flask import url_for
from arteWebRemote import ArteWebRemoteManager
from PIL import Image
import os

#----------------------------------------------
# Flask initialization
#----------------------------------------------
app = Flask(__name__)

#----------------------------------------------
# ArteWebRemote manager initialization
#----------------------------------------------
arteWebRemoteManager = ArteWebRemoteManager()

#----------------------------------------------
# Arte+7 entry point
#----------------------------------------------

#
# Arte+7 index (entry point) : /
#
@app.route("/")
def handle_index_request():
    videos = arteWebRemoteManager.getArtePlusVideos()
    return render_template('index.html', videos=videos)

#----------------------------------------------
# Arte+7 JSON API
#----------------------------------------------

#
# Request Arte+7 videos list reloading : /api/1.0/arteplus/reload
#
@app.route("/api/1.0/arteplus/reload")
def handle_reload_request():
    arteWebRemoteManager.refresh()
    return make_response("OK", 200)

#
# Request Arte+7 videos list : /api/1.0/arteplus/videos
#
@app.route("/api/1.0/arteplus/videos", methods=['GET'])
def handle_arteplus_video_list_request():
    videos = arteWebRemoteManager.getArtePlusVideos()
    return make_response(jsonify({'videos': videos}), 200)

#
# Request Arte+7 video info  : /api/1.0/arteplus/video/info/<video_id>
#
@app.route("/api/1.0/arteplus/video/info/<int:videoid>", methods=['GET'])
def handle_arteplus_video_info_request(videoid):
    video = arteWebRemoteManager.getArtePlusVideoInfo(videoid)
    return make_response(jsonify({'video': video}), 200)

#
# add a Arte+7 video in the download list : /api/1.0/arteplus/video/add/<video_id>
#
@app.route("/api/1.0/arteplus/video/add/<int:videoid>", methods=['POST'])
def handle_arteplus_video_add_request(videoid):
#    arteWebRemoteManager.addArtePlusVideo(videoid)
    return "add " + videoid

#
# remove a Arte+7 video from the download list: /api/1.0/arteplus/video/delete/<video_id>
#
@app.route("/api/1.0/arteplus/video/remove/<int:videoid>", methods=['GET'])
def handle_arteplus_video_remove_request(videoid):
#    arteWebRemoteManager.removeArtePlusVideo(videoid)
    return "remove  " + videoid

#
# configure a Arte+7 video in the download list /api/1.0/arteplus/video/configure/<video_id>
#
@app.route("/api/1.0/arteplus/video/configure/<int:videoid>", methods=['POST'])
def handle_arteplus_video_configure_request(videoid):
#    arteWebRemoteManager.configureArtePlusVideo(videoid)
    return "configure " + videoid


#----------------------------------------------
# Common routes handling
#----------------------------------------------

#
# Request favicon
#
@app.route('/favicon.ico')
def handle_favicon_request():
    return send_from_directory(os.path.join(app.root_path, 'static'), 'favicon.ico', mimetype='image/vnd.microsoft.icon')

#
# Error handler
#
@app.errorhandler(404)
def handle_error(error):
    return "Error {}".format(error.code), error.code

#----------------------------------------------
# Main
#----------------------------------------------
if __name__ == "__main__":

    # run the Flask application
    app.run(debug=True)

    # release manager resources
    arteWebRemoteManager.releaseResources()
